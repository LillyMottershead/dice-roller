{"version":3,"sources":["roll.js","RollerPage.js","SettingsPage.js","HelpPage.js","App.js","reportWebVitals.js","index.js"],"names":["sumReducer","accumulator","currentValue","singleRollCapturingPattern","whitespacePattern","compoundRollPattern","compoundRollTokensPattern","labelPattern","aliasRollPattern","argPattern","argNameToFunction","compRoll","extra","extraTokens","match","includes","tokens","push","replace","max","minToCrit","tohit","cancrit","crit","RollError","message","this","name","stack","Error","isSingleRoll","str","singleRoll","isMax","sides","times","keep","keepHighest","keepNotation","notation","rolls","i","num","Math","ceil","random","kept","discardedRolls","sort","a","b","reverse","slice","forEach","roll","keptRolls","filter","map","result","reduce","desc","join","target","repl","indexOf","compoundRoll","critRule","res","label","Array","from","matchAll","x","replaceAll","args","index","length","arr","params","split","arg","tokensWithRolls","token","dice","undefined","concat","tokensEvaluated","Function","find","rollDouble","extraRolls","critDesc","critResult","fullString","critString","aliasArgs","argsString","keys","Object","argFunction","rollIndex","deleteCommand","aliases","JSON","parse","localStorage","targetAlias","setItem","stringify","alias","prototype","command","frontToken","listAliases","aliasCode","aliasCommand","callAlias","RollForm","props","style","margin","className","type","ref","textInputRef","autoFocus","value","rollCommand","placeholder","onChange","onRollFormChange","width","onClick","onSubmit","Call","handleClose","position","padding","CloseButton","color","Roll","DieImage","die","background","marginBottom","fontSize","fileName","process","colorOrGray","src","alt","height","Aliases","AliasButton","aliasName","handleCommand","border","textAlign","cursor","right","top","x1","y1","x2","y2","stroke","strokeWidth","Log","onLogClear","log","Roller","state","output","calls","currKey","components","React","createRef","bind","hideCall","e","setState","preventDefault","current","focus","newOutput","pushToLog","pop","unshift","err","getRolls","settings","show","handleUpload","alignItems","overflow","Component","RadioButton","checked","content","Settings","critRuleRadioButton","onSettingsChange","paddingTop","QuickStart","Help","App","page","onPageClick","pageButtons","active","charAt","toUpperCase","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3c12ae8.chunk.js","sourcesContent":["// Reducer for Array.reduce() that sums all elements in aray\r\nconst sumReducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\r\n// Regex patterns\r\nconst singleRollCapturingPattern = /^(\\d+)?d(\\d+)(?:k([l-])?(\\d+))?$/;\r\nconst whitespacePattern = /\\s+/;\r\nconst compoundRollPattern = /^(?:(?:(?:\\d+)?d\\d+(?:k(?:[l-])?\\d+)?)|[+\\-*/()]|\\d+|\\s+)+$/;\r\nconst compoundRollTokensPattern = /((?:\\d+)?d\\d+(?:k(?:[l-])?\\d+)?)|([+\\-*/()])|(\\d+)/g;\r\nconst labelPattern = /\\[(.*?)\\]/g;\r\nconst aliasRollPattern = /\\{(.*?)\\}/g;\r\nconst argPattern = /(?:(\\w+)(?:\\((.*?)\\))?)/g;\r\n\r\nconst argNameToFunction = {\r\n    'add': add,\r\n    'replace': replace,\r\n    'adv': (compRoll) => replace(compRoll, 'd20', '2d20k1'),\r\n    'dis': (compRoll) => replace(compRoll, 'd20', '2d20kl1'),\r\n    'max': (compRoll) => compRoll.max = true,\r\n    'tohit': (compRoll, minToCrit = 20) => {\r\n        compRoll.tohit = true;\r\n        compRoll.minToCrit = minToCrit;\r\n    },\r\n    'cancrit': (compRoll) => compRoll.cancrit = true,\r\n    'crit': (compRoll) => compRoll.crit = true,\r\n}\r\n\r\nfunction RollError(message) {\r\n    this.name = 'RollError';\r\n    this.message = message;\r\n    this.stack = (new Error()).stack;\r\n}\r\nRollError.prototype = new Error();\r\n\r\n\r\n/**\r\n * @param {string} str - String to test for being in single roll notation \r\n * @returns {boolean} - True if the str is a single roll, false otherwise\r\n */\r\nfunction isSingleRoll(str) {\r\n    return str.match(singleRollCapturingPattern) !== null;\r\n}\r\n\r\n/**\r\n * @param {string} str - The roll string \r\n * @param {boolean} isMax - True if dice should give max results, false otherwise\r\n * @returns \r\n */\r\nfunction singleRoll(str, isMax=false) {\r\n    let match = str.match(singleRollCapturingPattern);\r\n    if (!match) {\r\n        throw new RollError(`Cannot parse ${str} as a valid roll.`);\r\n    }\r\n    const sides = +match[2], times = +match[1] || 1, keep = +match[4] || 0, keepHighest = !match[3];\r\n    if (sides < 2) {\r\n        throw new RollError(`Less than 2 sides in ${str}`);\r\n    }\r\n    if (times < 1) {\r\n        throw new RollError(`Rolling less than 1 time in ${str}`);\r\n    }\r\n    if (keep < 0) {\r\n        throw new RollError(`Cannot keep less 1 die in ${str}`);\r\n    }\r\n    if (keep > times) {\r\n        throw new RollError(`Cannot keep more die than are rolled in ${str}`);\r\n    }\r\n    let keepNotation = keep? `k${keepHighest? '' : 'l'}${keep}` : '';\r\n    const notation = `${times}d${sides}${keepNotation}`;\r\n    \r\n    const rolls = [];\r\n    for (let i = 0; i < times; i++) {\r\n        rolls.push({\r\n            sides,\r\n            num: isMax? sides : Math.ceil(Math.random() * sides),\r\n            kept: true,\r\n        });\r\n    }\r\n    if (keep < times) {\r\n        let discardedRolls = [...rolls];\r\n        discardedRolls.sort((a, b) => a.num - b.num);\r\n        if (!keepHighest) {\r\n            discardedRolls.reverse();\r\n        }\r\n        discardedRolls.slice(0, keep).forEach(roll => roll.kept = false);\r\n    }\r\n    let keptRolls = rolls.filter(roll => roll.kept).map(roll => roll.num);\r\n    let result = keptRolls.reduce(sumReducer);\r\n    return {\r\n        sides,\r\n        result,\r\n        rolls,\r\n        desc: `${notation} (${rolls.map(roll => roll.num).join(', ')})`,\r\n    };\r\n}\r\n\r\n/**\r\n * @param {Object} compRoll - The compound roll object\r\n * @param {string} extra - The extra roll string that should be added to the roll\r\n */\r\nfunction add(compRoll, extra) {\r\n    let extraTokens = extra.match(compoundRollTokensPattern);\r\n    if (!'+-*/'.includes(extraTokens[0])) {\r\n        compRoll.tokens.push('+');\r\n    }\r\n    compRoll.tokens.push(...extraTokens);\r\n}\r\n\r\n/**\r\n * @param {Object} compRoll - The compound roll object \r\n * @param {string} target - The target compound roll token that should be replaced \r\n * @param {string} repl - The replacement token\r\n */\r\nfunction replace(compRoll, target, repl) {\r\n    let index = compRoll.tokens.indexOf(target);\r\n    if (index !== -1) {\r\n        compRoll.tokens[compRoll.tokens.indexOf(target)] = repl;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} str - The compound roll string \r\n * @param {boolean} crit - Whether or not the roll should have a crit bonus calculation\r\n * @param {string} critRule - The rule for crits, either 'rolldouble', 'doubledice', or 'addmaxdice'\r\n * @returns \r\n */\r\nfunction compoundRoll(str, crit=false, critRule='addmaxdice') {\r\n    let res = {crit,};\r\n    \r\n    // set label and remove from str\r\n    res.label = Array.from(str.matchAll(labelPattern), x => x[1])[0] || '';\r\n    str = str.replaceAll(labelPattern, '');\r\n    \r\n    // get arguments and remove from str\r\n    let args = Array.from(str.matchAll(argPattern));\r\n    args = args.filter(a => !a[0].match(compoundRollPattern));\r\n    args.reverse();\r\n    args.forEach(x => {\r\n        str = `${str.slice(0,x.index)}${str.slice(x.index+x[0].length)}`;\r\n    });\r\n    args.reverse();\r\n    args = args.map(x => {\r\n        let arr = {name: x[1]};\r\n        arr.params = (x[2])? x[2].split(/\\s*,\\s*/) : [];\r\n        return arr;\r\n    });\r\n    \r\n    // tokenize str into compound roll tokens\r\n    if (!str.match(compoundRollPattern)) {\r\n        throw new RollError(`Unknown command.`);\r\n    }\r\n    res.tokens = str.match(compoundRollTokensPattern);\r\n\r\n    // apply arguments\r\n    for (let arg of args) {\r\n        if (argNameToFunction[arg.name]) {\r\n            argNameToFunction[arg.name](res, ...arg.params);\r\n        }\r\n    }\r\n    let tokensWithRolls = res.tokens.map(token => isSingleRoll(token)? singleRoll(token, res.max || false) : token);\r\n    res.dice = tokensWithRolls.filter(token => token.desc !== undefined);\r\n    res.dice = [].concat(...res.dice.map(x => x.rolls))\r\n    res.desc = tokensWithRolls.map(token => token.desc || token).join(' ');\r\n    let tokensEvaluated = tokensWithRolls.map(token => token.result || token).join(' ');\r\n    res.result = Function(`return ${tokensEvaluated};`)();\r\n\r\n    if (res.tohit) {\r\n        res.crit = tokensWithRolls.find(token => token.sides === 20).result >= res.minToCrit || res.crit;\r\n    }\r\n\r\n    if (res.crit && res.cancrit) {\r\n        function rollDouble(max=false) {\r\n            let extraRolls = res.tokens.filter(token => isSingleRoll(token));\r\n            extraRolls = extraRolls.map(token => singleRoll(token, max));\r\n            res.critDesc = extraRolls.map(token => token.desc).join(' + ');\r\n            res.critResult = extraRolls.map(token => token.result).reduce(sumReducer);\r\n        }\r\n        if (critRule === 'rolldouble') {\r\n            rollDouble();\r\n        } else if (critRule === 'doubledice') {\r\n            let rolls = tokensWithRolls.filter(token => (typeof token) === 'object');\r\n            res.critDesc = rolls.map(token => token.desc).join(' + ');\r\n            res.critResult = rolls.map(token => token.result).reduce(sumReducer);\r\n        } else if (critRule === 'addmaxdice') {\r\n            rollDouble(true);\r\n        }\r\n        res.fullString =  `${res.desc} = ${res.result}`;\r\n        res.critString = `CRIT: ${res.critDesc} = ${res.critResult}`;\r\n    } else {\r\n        res.fullString = `${res.desc} = ${res.result}`;\r\n    }\r\n    return res;\r\n}\r\n\r\n\r\nfunction aliasArgs(rolls, argsString) {\r\n    let args = Array.from(argsString.matchAll(argPattern));\r\n    args = args.map(x => {\r\n        let arr = {name: x[1]};\r\n        arr.params = (x[2])? x[2].split(/\\s*,\\s*/) : [];\r\n        return arr;\r\n    });\r\n\r\n    for (let arg of args) {\r\n        if (arg.name === 'attack') {\r\n            rolls[0] = rolls[0].concat(' tohit');\r\n            let cancrit = arg.params;\r\n            if (cancrit.length === 0) {\r\n                cancrit = [...new Array(rolls.length).keys()].slice(1);\r\n            }\r\n            cancrit.forEach(x => rolls[x] = rolls[x].concat(' cancrit'));\r\n        } else if (Object.keys(argNameToFunction).includes(arg.name)) {\r\n            let argFunction = argNameToFunction[arg.name];\r\n            let rollIndex;\r\n            if (arg.params.length === argFunction.length - 1) {\r\n                rollIndex = 0;\r\n            } else {\r\n                rollIndex = +arg.params[arg.params.length - 1] - 1;\r\n                arg.params = arg.params.slice(0, arg.params.length);\r\n            }\r\n            arg = `${arg.name}(${arg.params.join(',')})`;\r\n            rolls[rollIndex] = rolls[rollIndex].concat(' ', arg);\r\n        } else {\r\n            throw new RollError(`Unrecognized argument ${arg.name}`);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction deleteCommand(tokens) {\r\n    const aliases = JSON.parse(localStorage.aliases);\r\n    if (tokens.length < 1) {\r\n        throw new RollError(`Missing target alias to delete.`);\r\n    }\r\n    const targetAlias = tokens[0];\r\n    if (!aliases[targetAlias]) {\r\n        throw new RollError(`Alias ${targetAlias} does not exist.`);\r\n    }\r\n    delete aliases[targetAlias];\r\n    localStorage.setItem('aliases', JSON.stringify(aliases));\r\n    return {message: `Removed ${targetAlias} from list of aliases.`, alias: targetAlias};\r\n}\r\n\r\n\r\nfunction aliasCommand(tokens) {\r\n    const aliases = JSON.parse(localStorage.aliases);\r\n    function listAliases() {\r\n        const aliases = JSON.parse(localStorage.aliases);\r\n        if (Object.keys(aliases).length === 0) {\r\n            return {message: `No aliases.`};\r\n        }\r\n        return {message: `Aliases: ${Object.keys(aliases).join(', ')}`,};\r\n    }\r\n    if (tokens.length < 1) {\r\n        return listAliases();\r\n    }\r\n    let frontToken = tokens[0];\r\n    tokens = tokens.slice(1);\r\n    if (frontToken === 'delete') {\r\n        return deleteCommand(tokens);\r\n    } \r\n    if (frontToken === 'list') {\r\n        return listAliases();\r\n    }\r\n    if (tokens.length < 1) {\r\n        if (!aliases[frontToken]) {\r\n            throw new RollError(`Alias ${frontToken} does not exist.`);\r\n        }\r\n        return {message: `${frontToken}: ${aliases[frontToken].rolls.join(', ')}`};\r\n    }\r\n    let aliasCode = tokens.join(' ');\r\n    aliases[frontToken] = {rolls: Array.from(aliasCode.matchAll(aliasRollPattern), x => x[1])};\r\n    aliasCode = aliasCode.replaceAll(aliasRollPattern, '');\r\n    aliasArgs(aliases[frontToken].rolls, aliasCode);\r\n    localStorage.setItem('aliases', JSON.stringify(aliases));\r\n    return {message: `Added ${frontToken} to aliases.`, alias: frontToken};\r\n}\r\n\r\n\r\nfunction callAlias(alias, argsString, critRule) {\r\n    let rolls = JSON.parse(localStorage.aliases)[alias].rolls;\r\n    // add any extra rolls\r\n    rolls = rolls.concat(Array.from(argsString.matchAll(aliasRollPattern), x => x[1]));\r\n    argsString = argsString.replaceAll(aliasRollPattern, '');\r\n    aliasArgs(rolls, argsString);\r\n    let crit = false;\r\n    rolls = rolls.map(x => {\r\n        let roll = compoundRoll(x, crit, critRule=critRule);\r\n        crit = roll.crit || crit;\r\n        return roll;\r\n    });\r\n    return {\r\n        message: `Calling ${alias}:`,\r\n        rolls,\r\n    };\r\n}\r\n\r\n\r\nfunction command(str, critRule) {\r\n    if (str === '') {\r\n        throw new RollError('Empty command.');\r\n    }\r\n    let tokens = str.split(whitespacePattern);\r\n    \r\n    let frontToken = tokens[0];\r\n    tokens = tokens.slice(1);\r\n    if (frontToken === 'alias') {\r\n        return aliasCommand(tokens);\r\n    } else if (frontToken === 'delete') {\r\n        return deleteCommand(tokens);\r\n    } else if (JSON.parse(localStorage.aliases)[frontToken]) {\r\n        return callAlias(frontToken, Array.from(tokens).join(' '), critRule);\r\n    } else {\r\n        return {\r\n            message: `Rolling ${str}:`,\r\n            rolls: [compoundRoll(str, critRule=critRule)],\r\n        };\r\n    }\r\n}\r\n\r\nexport default command;","import React from 'react';\r\nimport './App.css';\r\nimport command from './roll.js';\r\n\r\nclass Roller extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rollCommand: '',\r\n            times: '',\r\n            output: { calls: [], currKey: 0},\r\n            aliases: JSON.parse(localStorage.aliases || '{ }'),\r\n            log: { components: [], currKey: 0 },\r\n        };\r\n    \r\n        this.textInputRef = React.createRef();\r\n    \r\n        this.onRollFormChange = this.onRollFormChange.bind(this);\r\n        this.onLogClear = this.onLogClear.bind(this);\r\n        this.hideCall = this.hideCall.bind(this);\r\n        this.handleCommand = this.handleCommand.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onRollFormChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({ [name]: value, });\r\n    }\r\n    \r\n    onLogClear(e) {\r\n        e.preventDefault();\r\n        this.setState({ log: { components: [], currKey: 0 } });\r\n    }\r\n    \r\n    hideCall(index) {\r\n        this.setState((state) => {\r\n            state.output.calls[index] = null;\r\n            return {output: state.output};\r\n        });\r\n        if (this.state.output.calls.filter(x => x !== null).length === 1) {\r\n            this.setState( { output: { calls: [], currKey: 0 } });\r\n        }\r\n        this.textInputRef.current.focus();\r\n    }\r\n    \r\n    handleCommand(rollCommand, times) {\r\n        function getRolls(rollCommand, index, log, critRule, hideCall) {\r\n            function pushToLog(log, message) {\r\n                if (log.components.length > 100) {\r\n                    log.components.pop();\r\n                }\r\n                log.components.unshift(<p key={`log#${log.currKey++}`}> {message} </p>);\r\n                log.currKey %= 101;\r\n            }\r\n            let output;\r\n            try {\r\n                output = command(rollCommand, critRule);\r\n                pushToLog(log, output.message);\r\n                if (output.rolls) {\r\n                    output.rolls.forEach(x => {\r\n                        let message;\r\n                        if (x.critString) {\r\n                            message = `${x.fullString}, ${x.critString}, ${x.result} ${x.label}`;\r\n                        } else {\r\n                            message = `${x.fullString} ${x.label}`\r\n                        }\r\n                        pushToLog(log, message);\r\n                    });\r\n                    output = output.rolls.map((x, i) => <Roll key={`roll#${i}`} roll={x} />);\r\n                } else {\r\n                    output = <div className='panel flex-child'> {output.message} </div>;\r\n                }\r\n            } catch (err) {\r\n                pushToLog(log, err.message);\r\n                output = <div className='panel flex-child'> {err.message} </div>;\r\n            }\r\n            return <Call key={`call#${index}`} rolls={output} handleClose={() => hideCall(index)}/>;\r\n        }\r\n\r\n        let newOutput = [...new Array(times).keys()].map((x, i) =>\r\n            getRolls(rollCommand, this.state.output.currKey + i, this.state.log, this.props.settings.critRule, this.hideCall)\r\n        );\r\n        this.setState(state => {\r\n            return {\r\n                output: {calls: [...state.output.calls, ...newOutput], currKey: state.output.currKey + newOutput.length},\r\n                aliases: JSON.parse(localStorage.aliases || '{ }'),\r\n                log: state.log,\r\n            }\r\n        });\r\n        this.textInputRef.current.focus();\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.state.rollCommand === 'clear') {\r\n            this.setState({\r\n                output: {calls: [], currKey: 0},\r\n            });\r\n        } else if (this.state.rollCommand === 'clear log') {\r\n            this.onLogClear(e);\r\n        } else if (this.state.rollCommand !== '') {\r\n            this.handleCommand(this.state.rollCommand, +this.state.times || 1);\r\n        }\r\n\r\n        if (this.state.rollCommand !== '') {\r\n            this.setState({\r\n                rollCommand: '',\r\n                times: '',\r\n            });\r\n        }\r\n        this.textInputRef.current.focus();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className='h-container'>\r\n                <Aliases\r\n                    aliases={this.state.aliases}\r\n                    handleUpload={this.handleUpload}\r\n                    handleCommand={this.handleCommand}\r\n                />\r\n                <div className='v-container flex-fill' style={{ width: '600px' }}>\r\n                    <RollForm\r\n                        rollCommand={this.state.rollCommand}\r\n                        times={this.state.times}\r\n                        onRollFormChange={this.onRollFormChange}\r\n                        onSubmit={this.onSubmit}\r\n                        textInputRef={this.textInputRef}\r\n                        />\r\n                    <div className='flex-fill' style={{ margin: '1em', }}>\r\n                        <div className='h-container' style={{ alignItems: 'center', height: '45vh', overflow: 'auto',}}>\r\n                            {this.state.output.calls.filter((x) => x !== null).reverse()} \r\n                        </div>\r\n                    </div>\r\n                    <div className='h-container'>\r\n                        <Log \r\n                            log={this.state.log.components} \r\n                            onLogClear={this.onLogClear}\r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RollForm(props) {\r\n    return (\r\n        <form style={{ margin: '10px', }}>\r\n            <input\r\n                className='panel input-text'\r\n                type='text'\r\n                ref={props.textInputRef}\r\n                autoFocus\r\n                name='rollCommand'\r\n                value={props.rollCommand}\r\n                placeholder='Command'\r\n                onChange={props.onRollFormChange}\r\n            />\r\n            <input\r\n                className='panel input-text'\r\n                type='text'\r\n                style={{ width: '30px' }}\r\n                name='times'\r\n                value={props.times}\r\n                placeholder='#'\r\n                onChange={props.onRollFormChange}\r\n            />\r\n            <input\r\n                className='panel input'\r\n                type='submit'\r\n                value='>'\r\n                onClick={props.onSubmit}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nfunction Call(props) {\r\n    return (\r\n        <div\r\n            className='h-container call'\r\n            onClick={props.handleClose}\r\n            style={{ position: 'relative', padding: '1em' }}\r\n        >\r\n            {props.rolls}\r\n            <span className='close-button'>\r\n                <CloseButton color='red'/>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Roll(props) {\r\n    let res = props.roll.result + (props.roll.critResult || 0);\r\n    let label = props.roll.label || '';\r\n    let fullString = props.roll.fullString || '';\r\n    let critString = props.roll.critString || '';\r\n    let dice = props.roll.dice.map((x, i) => <DieImage key={`rollImage#${i}}`} die={x} />);\r\n    return (\r\n        <div\r\n            className='panel flex-child tooltip'\r\n            style={{ background: '',margin: '-1px', marginBottom: '0px' }}\r\n        >\r\n            {dice}\r\n            <p>\r\n                {res} <span style={{ fontSize: '.75em' }}> {label} </span>\r\n            </p>\r\n            <span className='tooltiptext'>\r\n                {fullString} <br /> {critString}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DieImage(props) {\r\n    let fileName = process.env.PUBLIC_URL;\r\n    let colorOrGray = props.die.kept ? 'dice/' : 'gray_dice/';\r\n    let sides = props.die.sides;\r\n    let result = props.die.num;\r\n    fileName = `${fileName}/${colorOrGray}d${sides}_${result}.svg`;\r\n    return (\r\n        <img \r\n            src={fileName} \r\n            alt={`${result} (d${sides})`} \r\n            height='50px' \r\n        />\r\n    );\r\n}\r\n\r\nfunction Aliases(props) {\r\n    let aliases = Object.keys(props.aliases);\r\n    aliases.sort();\r\n    aliases = aliases.map((x, i) => (\r\n        <AliasButton \r\n            key={`alias#${i}`} \r\n            aliasName={x}\r\n            handleCommand={props.handleCommand}\r\n        />\r\n    ));\r\n    return (\r\n        <div className='panel flex-child aliases'>\r\n            <label className='h2'> Aliases </label>\r\n            <div> \r\n                {aliases} \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AliasButton(props) {\r\n    return (\r\n        <div \r\n            style={{ margin: '5px', padding: '5px', border: '1px #6b6c75 solid', textAlign: 'left', position: 'relative', }}\r\n        > \r\n            <div \r\n                style={{ width: '90%', cursor: 'pointer'}}\r\n                onClick={() => props.handleCommand(props.aliasName, 1)}\r\n            >\r\n                {props.aliasName}\r\n            </div>\r\n            <span \r\n                style={{ position: 'absolute', right: '5px', top: '5px', cursor: 'pointer'}}\r\n                onClick={() => props.handleCommand(`alias delete ${props.aliasName}`, 1)}\r\n            >\r\n                <CloseButton />\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CloseButton(props) {\r\n    let color = props.color || '#95969e';\r\n    return (\r\n        <svg width='10' height='10'>\r\n            <line x1='0' y1='0' x2='10' y2='10' style={{ stroke: color, strokeWidth: 2}} />\r\n            <line x1='0' y1='10' x2='10' y2='0' style={{ stroke: color, strokeWidth: 2}} />\r\n        </svg>\r\n    );\r\n}\r\n\r\nfunction Log(props) {\r\n    return (\r\n        <div className='panel log'>\r\n            <h2>\r\n                Log\r\n                <button className='panel input' onClick={props.onLogClear}>\r\n                    Clear\r\n                </button>\r\n            </h2>\r\n            <div className='inner-log'>\r\n                {props.log}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Roller;","import React from 'react';\r\nimport './App.css';\r\n\r\nclass Settings extends React.Component {\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        function critRuleRadioButton(value, content, props) {\r\n            return (\r\n                <RadioButton \r\n                    name='critRule'\r\n                    value={ value } \r\n                    onChange={ props.onSettingsChange }\r\n                    content={ content }\r\n                    checked={ props.settings.critRule === value }\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <div className='panel' style={{ textAlign: 'left' }}>\r\n                    <h2 style={{ textAlign: 'center'}}> Settings </h2>\r\n                    <h3> Crit Rule </h3>\r\n                    <i style={{ fontSize: '.75em' }}>Note that this only applies to future rolls.</i>\r\n                    <form style={{ paddingTop: '.75em'}}>\r\n                        { critRuleRadioButton('rolldouble', 'Roll double the number of dice.', this.props) }<br />\r\n                        { critRuleRadioButton('doubledice', 'Roll the dice normally and double them.', this.props) }<br />\r\n                        { critRuleRadioButton('addmaxdice', 'Roll the dice normally and add the maximum possible dice roll on top.', this.props) }<br />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RadioButton(props) {\r\n    return (\r\n        <label className='input-radio-container'>\r\n            <input \r\n                type='radio'\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                checked={props.checked}\r\n            />\r\n            <span className='input-radio-check'></span>\r\n            {props.content}\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction Help(props) {\r\n    if (!props.show) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className='panel' style={{textAlign: 'left'}}>\r\n            <QuickStart />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction QuickStart(props) {\r\n    return (\r\n        <section className='textheavy'>\r\n            <h3>Quick Start</h3>\r\n            <p>\r\n                Hello, welcome to QuickRoll! Most functionallity is available through the command line at the top of the Roller page. Try typing <code>d20</code>!\r\n                Now try making the roll more complicated with <code>2d10+d4+7</code>.\r\n                If you wanted to make that roll three more times, you can type <code>3</code> in the adjacent text input. And if you want to clear the rolls that you currently see, type <code>clear</code>, or you can directly click on the rolls that you want to have removed.\r\n            </p>\r\n            <p>\r\n                If you wanted to have advantage or disadvantage, you have two options. You could use the dice notation itself, as in <code>2d20k1</code> for advantage(<code>k1</code> means to keep the 1st highest dice roll), or <code>2d20kl1</code> for disadvantage (the <code>l</code> tells the keep notation to only keep the lowest). An alternative way would be to use the <code>adv</code> and <code>dis</code> keywords: <code>d20 adv</code>. Another useful keyword you can use on pure rolls would be <code>max</code>, which maxes the output of all dice rolls.\r\n            </p>\r\n            <p>\r\n                The last major thing you can do with these pure rolls is label them. If you wanted to note the kind of damage or the source, you can create one with square brackets: <code>6d6 [fire]</code>.\r\n            </p>\r\n            <p>\r\n                If you want to save a particular roll so that you can use it numerous times later, you can create an alias with \r\n            </p>\r\n            <center>\r\n                <code>alias &lt;name&gt; &#123;roll 1&#125; &#123;roll 2&#125; &#123;roll 3&#125; ...</code>\r\n            </center>\r\n            <p>\r\n                Note, alias names cannot contain white space. For example <code>alias fireball &#123;8d6 [fire]&#125;</code>. To use the alias simply enter <code>fireball</code>, or click on it in the list of aliases. Another example might be \r\n            </p>\r\n            <center>\r\n                <code>alias shortsword &#123;d20 [to hit]&#125; &#123;d6 [slashing]&#125;</code>\r\n            </center>\r\n            <p>\r\n                Like pure rolls, it is easy to give this attack alias advantage or disadvantage with <code>shortsword dis</code>. This will assume that the d20 to hit roll is the first roll. You can also add an additional roll to a single use of the alias by doing <code>shortsword &#123;d4+1 [poison]&#125;</code>.\r\n            </p>\r\n            <p>\r\n                QuickRoll also has crit handling (you can pick which crit damage rule you prefer in the settings page). In order to do so, however, you need to indicate which rolls of an alias are the 'to hit' rolls, and which rolls are eligible for crit damage. Using the shortsword example from before, this can be done in two ways. You can use <code>tohit</code> and <code>cancrit</code> on individual rolls: \r\n            </p>\r\n            <center>\r\n                <code>alias shortsword &#123;d20 [to hit] tohit&#125; &#123;d6 [slashing] cancrit&#125;</code>\r\n            </center>\r\n            <p>\r\n                or as a shorthand, you can use the alias specific <code>attack</code> keyword. This keyword assumes that the first roll is the to hit roll, and all following are crit damage.\r\n            </p>\r\n            <center>\r\n                <code>alias shortsword &#123;d20 [to hit]&#125; &#123;d6 [slashing]&#125; attack</code>\r\n            </center>\r\n            <p>\r\n                Now, whenever the to hit roll is 20, crit damage will be automatically calculated! If you want to see the math, you can always mouseover the individual rolls for a helpful tooltip. With these rules, most rolls in DnD will be easy to make, and when necessary, store and use repeatedly using the alias system. Good luck!\r\n            </p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Help;","import React from 'react';\nimport './App.css';\nimport Roller from './RollerPage.js';\nimport Settings from './SettingsPage.js';\nimport Help from './HelpPage.js';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        if (!localStorage.aliases) {\n            localStorage.setItem('aliases', JSON.stringify({}));\n        }\n        if (!localStorage.settings) {\n            localStorage.setItem('settings', JSON.stringify({critRule: 'rolldouble'}));\n        }\n        this.state = {\n            page: 'roller',\n            settings: JSON.parse(localStorage.settings),\n        };\n        this.onPageClick = this.onPageClick.bind(this);\n        this.onSettingsChange = this.onSettingsChange.bind(this);\n    }\n\n    onPageClick(e) {\n        this.setState({\n            page: e.target.name,\n        });\n    }\n    onSettingsChange(e) {\n        let settings = this.state.settings;\n        settings[e.target.name] = e.target.value;\n        this.setState({\n            settings: settings,\n        });\n        localStorage.setItem('settings', JSON.stringify(settings));\n    }\n\n    render() {\n        let pages = ['roller', 'settings', 'help'];\n        function pageButton(name, onPageClick, active) {\n            return (\n            <button className={active? 'page-button-active' : 'page-button'} name={name} onClick={onPageClick} active>\n                {`${name.charAt(0).toUpperCase()}${name.slice(1)}`}\n            </button>\n            );\n        }\n        let pageButtons = pages.map(x => pageButton(x, this.onPageClick, x === this.state.page));\n        return (\n            <div>\n                <h1 style={{ padding: '10px' }}> quickroll </h1>\n                <span style={{ padding: '10px' }}>\n                    {pageButtons}\n                </span>\n                <Roller show={this.state.page === 'roller'} settings={this.state.settings}/>\n                <Settings show={this.state.page === 'settings'} settings={this.state.settings} onSettingsChange={this.onSettingsChange}/>\n                <Help show={this.state.page === 'help'}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}